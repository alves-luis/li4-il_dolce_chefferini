// <auto-generated />
using System;
using Il_Dolce_Chefferini.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Il_Dolce_Chefferini.Migrations
{
    [DbContext(typeof(DolceChefferiniContext))]
    [Migration("20190602075004_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.Avaliacao", b =>
                {
                    b.Property<int>("confecaoId");

                    b.Property<DateTime>("data")
                        .HasColumnName("data");

                    b.Property<int>("dificuldade")
                        .HasColumnName("dificuldade");

                    b.Property<int>("grauSatisfacao")
                        .HasColumnName("grauSatisfacao");

                    b.Property<int?>("utilidadeAjudas")
                        .HasColumnName("utilidadeAjudas");

                    b.HasKey("confecaoId");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.Confecao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("bemSucedida")
                        .HasColumnName("bemSucedida");

                    b.Property<DateTime>("inicioPassoAtual");

                    b.Property<int>("passoAtual");

                    b.Property<int>("receitaId");

                    b.Property<bool>("usouAjuda")
                        .HasColumnName("usouAjuda");

                    b.Property<int>("utilizadorId");

                    b.HasKey("id");

                    b.HasIndex("receitaId");

                    b.HasIndex("utilizadorId");

                    b.ToTable("Confecao");
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.ConfecaoPasso", b =>
                {
                    b.Property<int>("confecaoId")
                        .HasColumnName("confecaoId");

                    b.Property<int>("numeroSequenciaPasso");

                    b.Property<int>("receitaId");

                    b.Property<int?>("passonumeroSequencia");

                    b.Property<int?>("passoreceitaId");

                    b.Property<long>("tempoEmTicks")
                        .HasColumnName("tempoEmTicks");

                    b.HasKey("confecaoId", "numeroSequenciaPasso", "receitaId");

                    b.HasIndex("passoreceitaId", "passonumeroSequencia");

                    b.ToTable("ConfecaoPasso");
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.Ementa", b =>
                {
                    b.Property<bool>("almoco")
                        .HasColumnName("almoco");

                    b.Property<int>("utilizadorId");

                    b.Property<string>("diaDaSemana")
                        .HasColumnName("diaDaSemana")
                        .HasMaxLength(64);

                    b.Property<int>("receitaId");

                    b.HasKey("almoco", "utilizadorId", "diaDaSemana");

                    b.HasIndex("receitaId");

                    b.HasIndex("utilizadorId");

                    b.ToTable("Ementa");
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.Ingrediente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("comida")
                        .HasColumnName("comida");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(255);

                    b.HasKey("id");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.IngredientePasso", b =>
                {
                    b.Property<int>("ingredienteId");

                    b.Property<int>("receitaId");

                    b.Property<int>("numeroSequenciaPasso");

                    b.Property<int?>("passonumeroSequencia");

                    b.Property<int?>("passoreceitaId");

                    b.Property<int>("quantidade")
                        .HasColumnName("quantidade");

                    b.Property<string>("unidade")
                        .IsRequired()
                        .HasColumnName("unidade")
                        .HasMaxLength(32);

                    b.HasKey("ingredienteId", "receitaId", "numeroSequenciaPasso");

                    b.HasIndex("passoreceitaId", "passonumeroSequencia");

                    b.ToTable("IngredientePasso");
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.Passo", b =>
                {
                    b.Property<int>("receitaId");

                    b.Property<int>("numeroSequencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("numeroSequencia")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aspetoEsperado")
                        .IsRequired()
                        .HasColumnName("aspetoEsperado")
                        .HasMaxLength(128);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasMaxLength(255);

                    b.Property<long>("tempoEsperadoEmTicks")
                        .HasColumnName("tempoEsperadoEmTicks");

                    b.Property<string>("urlVideo")
                        .HasColumnName("urlVideo")
                        .HasMaxLength(512);

                    b.HasKey("receitaId", "numeroSequencia");

                    b.ToTable("Passo");
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.Receita", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("calorias")
                        .HasColumnName("calorias");

                    b.Property<string>("criador")
                        .IsRequired()
                        .HasColumnName("criador")
                        .HasMaxLength(64);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasMaxLength(511);

                    b.Property<int>("doses")
                        .HasColumnName("doses");

                    b.Property<int>("grauDificuldade")
                        .HasColumnName("grauDificuldade");

                    b.Property<int>("hidratos")
                        .HasColumnName("hidratos");

                    b.Property<string>("imagem");

                    b.Property<int>("lipidos")
                        .HasColumnName("lipidos");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(255);

                    b.Property<int>("proteinas")
                        .HasColumnName("proteinas");

                    b.Property<int>("temperaturaId");

                    b.Property<long>("tempoEsperadoEmTicks")
                        .HasColumnName("tempoEsperadoEmTicks");

                    b.HasKey("id");

                    b.HasIndex("temperaturaId");

                    b.ToTable("Receita");
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.Temperatura", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(64);

                    b.HasKey("id");

                    b.ToTable("Temperatura");
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.Utilizador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(64);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnName("password");

                    b.HasKey("id");

                    b.ToTable("Utilizador");
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.Avaliacao", b =>
                {
                    b.HasOne("Il_Dolce_Chefferini.Models.Confecao", "confecao")
                        .WithOne("avaliacao")
                        .HasForeignKey("Il_Dolce_Chefferini.Models.Avaliacao", "confecaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.Confecao", b =>
                {
                    b.HasOne("Il_Dolce_Chefferini.Models.Receita", "receita")
                        .WithMany()
                        .HasForeignKey("receitaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Il_Dolce_Chefferini.Models.Utilizador", "utilizador")
                        .WithMany("confecoes")
                        .HasForeignKey("utilizadorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.ConfecaoPasso", b =>
                {
                    b.HasOne("Il_Dolce_Chefferini.Models.Confecao", "confecao")
                        .WithMany("tempoEmPasso")
                        .HasForeignKey("confecaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Il_Dolce_Chefferini.Models.Passo", "passo")
                        .WithMany()
                        .HasForeignKey("passoreceitaId", "passonumeroSequencia");
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.Ementa", b =>
                {
                    b.HasOne("Il_Dolce_Chefferini.Models.Receita", "receita")
                        .WithMany()
                        .HasForeignKey("receitaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Il_Dolce_Chefferini.Models.Utilizador", "utilizador")
                        .WithMany("ementa")
                        .HasForeignKey("utilizadorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.IngredientePasso", b =>
                {
                    b.HasOne("Il_Dolce_Chefferini.Models.Ingrediente", "ingrediente")
                        .WithMany()
                        .HasForeignKey("ingredienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Il_Dolce_Chefferini.Models.Passo", "passo")
                        .WithMany("ingredientes")
                        .HasForeignKey("passoreceitaId", "passonumeroSequencia");
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.Passo", b =>
                {
                    b.HasOne("Il_Dolce_Chefferini.Models.Receita", "receita")
                        .WithMany("passos")
                        .HasForeignKey("receitaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Il_Dolce_Chefferini.Models.Receita", b =>
                {
                    b.HasOne("Il_Dolce_Chefferini.Models.Temperatura", "temperatura")
                        .WithMany()
                        .HasForeignKey("temperaturaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
